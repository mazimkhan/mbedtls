defaults:
  docker:
  - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
  working_directory: ~/repo
jobs:
  check-doxy-blocks-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r check-doxy-blocks,
        name: check-doxy-blocks}
    working_directory: ~/
  check-doxygen-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r check-doxygen,
        name: check-doxygen}
    working_directory: ~/
  check-generated-files-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r check-generated-files,
        name: check-generated-files}
    working_directory: ~/
  check-names-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r check-names,
        name: check-names}
    working_directory: ~/
  check-recursion-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r check-recursion,
        name: check-recursion}
    working_directory: ~/
  cmake-asan-gcc-no-max-fragment-len-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r cmake-asan-gcc-no-max-fragment-len,
        name: cmake-asan-gcc-no-max-fragment-len}
    working_directory: ~/
  cmake-asan-gcc-no-renegotiation-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r cmake-asan-gcc-no-renegotiation,
        name: cmake-asan-gcc-no-renegotiation}
    working_directory: ~/
  cmake-asan-gcc-sslv3-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r cmake-asan-gcc-sslv3,
        name: cmake-asan-gcc-sslv3}
    working_directory: ~/
  cmake-asan-gcc-test-null-entropy-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r cmake-asan-gcc-test-null-entropy,
        name: cmake-asan-gcc-test-null-entropy}
    working_directory: ~/
  cmake-asan-gcc-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r cmake-asan-gcc,
        name: cmake-asan-gcc}
    working_directory: ~/
  cmake-asan-rsa-no-crt-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r cmake-asan-rsa-no-crt,
        name: cmake-asan-rsa-no-crt}
    working_directory: ~/
  cmake-clang-full-config-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r cmake-clang-full-config,
        name: cmake-clang-full-config}
    working_directory: ~/
  cmake-memsan-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r cmake-memsan,
        name: cmake-memsan}
    working_directory: ~/
  cmake-out-of-src-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r cmake-out-of-src,
        name: cmake-out-of-src}
    working_directory: ~/
  cmake-release-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r cmake-release,
        name: cmake-release}
    working_directory: ~/
  cross-build-dll-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r cross-build-dll,
        name: cross-build-dll}
    working_directory: ~/
  cross-build-tests-dll-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r cross-build-tests-dll,
        name: cross-build-tests-dll}
    working_directory: ~/
  cross-build-tests-windows-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r cross-build-tests-windows,
        name: cross-build-tests-windows}
    working_directory: ~/
  cross-build-windows-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r cross-build-windows,
        name: cross-build-windows}
    working_directory: ~/
  curves-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r curves, name: curves}
    working_directory: ~/
  keyexchanges-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r keyexchanges,
        name: keyexchanges}
    working_directory: ~/
  make-32bit-bignum-limbs-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r make-32bit-bignum-limbs,
        name: make-32bit-bignum-limbs}
    working_directory: ~/
  make-allow-sha1-certs-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r make-allow-sha1-certs,
        name: make-allow-sha1-certs}
    working_directory: ~/
  make-full-config-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r make-full-config,
        name: make-full-config}
    working_directory: ~/
  make-gcc-arm-no-udbl-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r make-gcc-arm-no-udbl,
        name: make-gcc-arm-no-udbl}
    working_directory: ~/
  make-gcc-arm-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r make-gcc-arm,
        name: make-gcc-arm}
    working_directory: ~/
  make-i386-on-x64-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r make-i386-on-x64,
        name: make-i386-on-x64}
    working_directory: ~/
  make-ilp32-on-x64-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r make-ilp32-on-x64,
        name: make-ilp32-on-x64}
    working_directory: ~/
  make-no-client-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r make-no-client,
        name: make-no-client}
    working_directory: ~/
  make-no-net-entropy-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r make-no-net-entropy,
        name: make-no-net-entropy}
    working_directory: ~/
  make-no-srv-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r make-no-srv,
        name: make-no-srv}
    working_directory: ~/
  make-no-std-func-nv-seed-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r make-no-std-func-nv-seed,
        name: make-no-std-func-nv-seed}
    working_directory: ~/
  make-shared-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r make-shared,
        name: make-shared}
    working_directory: ~/
  print-environment-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r print-environment,
        name: print-environment}
    working_directory: ~/
  scm:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - checkout: {path: mbedtls}
    - persist_to_workspace:
        paths: [mbedtls]
        root: ~/
    working_directory: ~/
  unix-make-ubuntu-16.04-x64:
    docker:
    - {image: 'armmbed/mbedtls-ubuntu-16.04:0.0.1'}
    steps:
    - attach_workspace: {at: ~/}
    - run: {command: ls -ltr; ls -ltr mbedtls, name: check files}
    - run: {command: cd mbedtls; ./tests/scripts/builder.py build -r unix-make, name: unix-make}
    working_directory: ~/
version: 2
workflows:
  nightly:
    jobs:
    - scm
    - check-doxy-blocks-ubuntu-16.04-x64:
        requires: [scm]
    - check-doxygen-ubuntu-16.04-x64:
        requires: [scm]
    - check-generated-files-ubuntu-16.04-x64:
        requires: [scm]
    - check-names-ubuntu-16.04-x64:
        requires: [scm]
    - check-recursion-ubuntu-16.04-x64:
        requires: [scm]
    - cmake-asan-gcc-ubuntu-16.04-x64:
        requires: [scm]
    - cmake-asan-gcc-no-max-fragment-len-ubuntu-16.04-x64:
        requires: [scm]
    - cmake-asan-gcc-no-renegotiation-ubuntu-16.04-x64:
        requires: [scm]
    - cmake-asan-gcc-sslv3-ubuntu-16.04-x64:
        requires: [scm]
    - cmake-asan-gcc-test-null-entropy-ubuntu-16.04-x64:
        requires: [scm]
    - cmake-asan-rsa-no-crt-ubuntu-16.04-x64:
        requires: [scm]
    - cmake-clang-full-config-ubuntu-16.04-x64:
        requires: [scm]
    - cmake-memsan-ubuntu-16.04-x64:
        requires: [scm]
    - cmake-out-of-src-ubuntu-16.04-x64:
        requires: [scm]
    - cmake-release-ubuntu-16.04-x64:
        requires: [scm]
    - cross-build-dll-ubuntu-16.04-x64:
        requires: [scm]
    - cross-build-tests-dll-ubuntu-16.04-x64:
        requires: [scm]
    - cross-build-tests-windows-ubuntu-16.04-x64:
        requires: [scm]
    - cross-build-windows-ubuntu-16.04-x64:
        requires: [scm]
    - curves-ubuntu-16.04-x64:
        requires: [scm]
    - keyexchanges-ubuntu-16.04-x64:
        requires: [scm]
    - make-32bit-bignum-limbs-ubuntu-16.04-x64:
        requires: [scm]
    - make-allow-sha1-certs-ubuntu-16.04-x64:
        requires: [scm]
    - make-full-config-ubuntu-16.04-x64:
        requires: [scm]
    - make-gcc-arm-ubuntu-16.04-x64:
        requires: [scm]
    - make-gcc-arm-no-udbl-ubuntu-16.04-x64:
        requires: [scm]
    - make-i386-on-x64-ubuntu-16.04-x64:
        requires: [scm]
    - make-ilp32-on-x64-ubuntu-16.04-x64:
        requires: [scm]
    - make-no-client-ubuntu-16.04-x64:
        requires: [scm]
    - make-no-net-entropy-ubuntu-16.04-x64:
        requires: [scm]
    - make-no-srv-ubuntu-16.04-x64:
        requires: [scm]
    - make-no-std-func-nv-seed-ubuntu-16.04-x64:
        requires: [scm]
    - make-shared-ubuntu-16.04-x64:
        requires: [scm]
    - print-environment-ubuntu-16.04-x64:
        requires: [scm]
    - unix-make-ubuntu-16.04-x64:
        requires: [scm]
  release-tests:
    jobs:
    - scm
    - check-doxy-blocks-ubuntu-16.04-x64:
        requires: [scm]
    - check-doxygen-ubuntu-16.04-x64:
        requires: [scm]
    - check-generated-files-ubuntu-16.04-x64:
        requires: [scm]
    - check-names-ubuntu-16.04-x64:
        requires: [scm]
    - check-recursion-ubuntu-16.04-x64:
        requires: [scm]
    - cmake-asan-gcc-ubuntu-16.04-x64:
        requires: [scm]
    - cmake-asan-gcc-no-max-fragment-len-ubuntu-16.04-x64:
        requires: [scm]
    - cmake-asan-gcc-no-renegotiation-ubuntu-16.04-x64:
        requires: [scm]
    - cmake-asan-gcc-sslv3-ubuntu-16.04-x64:
        requires: [scm]
    - cmake-asan-gcc-test-null-entropy-ubuntu-16.04-x64:
        requires: [scm]
    - cmake-asan-rsa-no-crt-ubuntu-16.04-x64:
        requires: [scm]
    - cmake-clang-full-config-ubuntu-16.04-x64:
        requires: [scm]
    - cmake-memsan-ubuntu-16.04-x64:
        requires: [scm]
    - cmake-out-of-src-ubuntu-16.04-x64:
        requires: [scm]
    - cmake-release-ubuntu-16.04-x64:
        requires: [scm]
    - cross-build-dll-ubuntu-16.04-x64:
        requires: [scm]
    - cross-build-tests-dll-ubuntu-16.04-x64:
        requires: [scm]
    - cross-build-tests-windows-ubuntu-16.04-x64:
        requires: [scm]
    - cross-build-windows-ubuntu-16.04-x64:
        requires: [scm]
    - curves-ubuntu-16.04-x64:
        requires: [scm]
    - keyexchanges-ubuntu-16.04-x64:
        requires: [scm]
    - make-32bit-bignum-limbs-ubuntu-16.04-x64:
        requires: [scm]
    - make-allow-sha1-certs-ubuntu-16.04-x64:
        requires: [scm]
    - make-full-config-ubuntu-16.04-x64:
        requires: [scm]
    - make-gcc-arm-ubuntu-16.04-x64:
        requires: [scm]
    - make-gcc-arm-no-udbl-ubuntu-16.04-x64:
        requires: [scm]
    - make-i386-on-x64-ubuntu-16.04-x64:
        requires: [scm]
    - make-ilp32-on-x64-ubuntu-16.04-x64:
        requires: [scm]
    - make-no-client-ubuntu-16.04-x64:
        requires: [scm]
    - make-no-net-entropy-ubuntu-16.04-x64:
        requires: [scm]
    - make-no-srv-ubuntu-16.04-x64:
        requires: [scm]
    - make-no-std-func-nv-seed-ubuntu-16.04-x64:
        requires: [scm]
    - make-shared-ubuntu-16.04-x64:
        requires: [scm]
    - print-environment-ubuntu-16.04-x64:
        requires: [scm]
    - unix-make-ubuntu-16.04-x64:
        requires: [scm]
  version: 2
